{"version":3,"sources":["user.js"],"names":["mongoose","require","bcrypt","userSchema","Schema","nombre","String","apellido","statics","findByEmail","correo","regeneratorRuntime","async","_context","prev","next","abrupt","this","findOne","stop","findByContra","_context2","userModel","model","module","exports"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,YACnBC,OAASD,QAAQ,UAEjBE,WAAaH,SAASI,OAAO,CAE/BC,OAAQC,OAFNH,SAAUG,OAEZD,OAAQC,OACRC,aAAUD,SAOdH,WAAWK,QAAQC,YAAc,SAAAC,GAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAG,OAAA,SAAAC,KAAAC,QAAA,CAAAR,OAAAA,KAAA,KAAA,EAAA,IAAA,MAAA,OAAAG,EAAAM,SAAA,KAAAF,OAAAd,WAAAK,QAAAY,aAAA,SACjBF,GADiB,OAAAP,mBAAAC,MAAA,SAAAS,GAAA,OAAA,OAAAA,EAAAP,KAAAO,EAAAN,MAAA,KAAA,EAAA,OAAAM,EAAAL,OAAA,SACPN,KAAAA,QAAAA,CAAAA,aAAAA,KADO,KAAA,EAAA,IAAA,MAAA,OAAAW,EAAAF,SAAA,KAAAF,OAAA,IAAAK,UAAAtB,SAAAuB,MAAA,QAAApB,YAAAqB,OAAAC,QAAAH","file":"user.min.js","sourcesContent":["const mongoose = require('mongoose');\r\nconst bcrypt = require('bcrypt');\r\n\r\nconst userSchema = mongoose.Schema({\r\n\r\n    nombre: String,\r\n    apellido: String,\r\n    correo: String,\r\n    contraseña: String\r\n});\r\n\r\n\r\n// Método para buscar un usuario por su correo\r\nuserSchema.statics.findByEmail = async function (correo) {\r\n    return this.findOne({ correo });\r\n  };\r\n\r\n\r\nuserSchema.statics.findByContra = async function (contraseña) {\r\n    return this.findOne({ contraseña });\r\n};\r\n\r\n \r\nconst userModel = mongoose.model('users', userSchema);\r\n\r\nmodule.exports = userModel;"]}