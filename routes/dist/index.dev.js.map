{"version":3,"sources":["index.js"],"names":["express","require","router","Router","userSchema","solicitudSchema","bcrypt","get","req","res","next","render","title","post","user","nombre","body","txtNombre","apellido","txtApellido","correo","txtCorreo","contraseña","txtContraseña","save","console","log","error","status","send","tipoFinanciamiento","txttipoFinanciamiento","condicionLaboral","txtcondicionLaboral","tipoDeCompra","txttipoDeCompra","seleccionMoneda","txtseleccionMoneda","User","findByEmail","usuarioEncontrado","mensaje","findByContra","esContraseñaCorrecta","usuario","json","accion","deleteOne","redirect","module","exports"],"mappings":"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","sourcesContent":["var express = require('express');\nvar router = express.Router();\nconst userSchema = require('../models/user')\nconst solicitudSchema = require('../models/solicitudes')\nconst bcrypt = require('bcrypt');\n\n\n/* GET home page. */\nrouter.get('/', function(req, res, next) {\n  res.render('index', { title: 'Express' });\n});\n\n\nrouter.get('/registro',(req,res)=>{\n  res.render('registro');\n});\n\n\nrouter.get('/perfil',(req,res)=>{\n  res.render('perfil');\n});\n\nrouter.get('/solicitarprestamo',(req,res)=>{\n  res.render('solicitarprestamo');\n});\n\n\nrouter.get('/versolicitud',(req,res)=>{\n  res.render('versolicitud');\n});\n\n\nrouter.get('/login',(req,res)=>{\n  res.render('login');\n});\n\n//metodos\nrouter.post('/registro', async (req, res) => {\n  try {        \n      const user = new userSchema({\n      nombre: req.body.txtNombre,\n      apellido: req.body.txtApellido,\n      correo: req.body.txtCorreo,\n      contraseña: req.body.txtContraseña\n      });        \n      await user.save();\n      console.log('Se agregó un usuario nuevo');\n      res.render('index');  \n  } catch (error) {\n      console.error(error);\n      res.status(500).send('Error');\n  }\n});\n\n\n\nrouter.post('/solicitarprestamo', async (req, res) => {\n  try {        \n      const user = new solicitudSchema({\n        tipoFinanciamiento: req.body.txttipoFinanciamiento,\n        condicionLaboral: req.body.txtcondicionLaboral,\n        tipoDeCompra: req.body.txttipoDeCompra,\n        seleccionMoneda: req.body.txtseleccionMoneda\n      });        \n      await user.save();\n      console.log('Se agregó un usuario nuevo');\n      res.render('index');  \n  } catch (error) {\n      console.error(error);\n      res.status(500).send('Error');\n  }\n});\n\n\nconst User = require('../models/user'); \n\nrouter.post('/login', async (req, res) => {\n  const { txtCorreo, txtContraseña } = req.body;\n\n  try {\n    const usuarioEncontrado = await User.findByEmail(txtCorreo);\n\n    if (!usuarioEncontrado) {\n      return res.render('index', { mensaje: 'Correo incorrecto' });\n    }\n\n    const esContraseñaCorrecta = await User.findByContra(txtContraseña);;\n    if (!esContraseñaCorrecta) {\n      return res.render('index', { mensaje: 'Contraseña incorrecta' });\n    }\n\n    res.render('perfil', { usuario: usuarioEncontrado });\n  } catch (error) {\n    console.error(error);\n    res.status(500).json({ mensaje: 'Error en el servidor' });\n  }\n});\n\nrouter.post('/perfil/editar', async (req, res) => {\n  const { txtCorreo, txtContraseña, txtNombre, txtApellido, accion } = req.body;\n\n  try {\n    const usuarioEncontrado = await User.findByEmail(txtCorreo);\n\n    if (!usuarioEncontrado) {\n      return res.render('index', { mensaje: 'Correo incorrecto' });\n    }\n    console.log(accion); \n    if (accion === 'actualizar') {\n      usuarioEncontrado.nombre = txtNombre;\n      usuarioEncontrado.apellido = txtApellido;\n      await usuarioEncontrado.save();\n      return res.render('perfil', { usuario: usuarioEncontrado, mensaje: 'Datos actualizados correctamente' });\n    } else if (accion === 'eliminar') {\n      await usuarioEncontrado.deleteOne();\n      return res.redirect('/'); \n    }\n    res.redirect('/perfil');\n  } catch (error) {\n    console.error(error);\n    res.status(500).json({ mensaje: 'Error en el servidor' });\n  }\n});\n\nmodule.exports = router;\n"],"file":"index.dev.js"}